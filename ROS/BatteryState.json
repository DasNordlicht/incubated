{"POWER_SUPPLY_STATUS_UNKNOWN": {"type": "integer", "minimum": 0, "maximum": 255, "description": "Property. Constants are chosen to match the enums in the linux kernel defined in include/linux/power_supply.h as of version 3.7 The one difference is for style reasons the constants are all uppercase not mixed case. Power supply status constants "}, "POWER_SUPPLY_STATUS_CHARGING": {"type": "integer", "minimum": 0, "maximum": 255, "description": "Property. "}, "POWER_SUPPLY_STATUS_DISCHARGING": {"type": "integer", "minimum": 0, "maximum": 255, "description": "Property. "}, "POWER_SUPPLY_STATUS_NOT_CHARGING": {"type": "integer", "minimum": 0, "maximum": 255, "description": "Property. "}, "POWER_SUPPLY_STATUS_FULL": {"type": "integer", "minimum": 0, "maximum": 255, "description": "Property. "}, "POWER_SUPPLY_HEALTH_UNKNOWN": {"type": "integer", "minimum": 0, "maximum": 255, "description": "Property. Power supply health constants "}, "POWER_SUPPLY_HEALTH_GOOD": {"type": "integer", "minimum": 0, "maximum": 255, "description": "Property. "}, "POWER_SUPPLY_HEALTH_OVERHEAT": {"type": "integer", "minimum": 0, "maximum": 255, "description": "Property. "}, "POWER_SUPPLY_HEALTH_DEAD": {"type": "integer", "minimum": 0, "maximum": 255, "description": "Property. "}, "POWER_SUPPLY_HEALTH_OVERVOLTAGE": {"type": "integer", "minimum": 0, "maximum": 255, "description": "Property. "}, "POWER_SUPPLY_HEALTH_UNSPEC_FAILURE": {"type": "integer", "minimum": 0, "maximum": 255, "description": "Property. "}, "POWER_SUPPLY_HEALTH_COLD": {"type": "integer", "minimum": 0, "maximum": 255, "description": "Property. "}, "POWER_SUPPLY_HEALTH_WATCHDOG_TIMER_EXPIRE": {"type": "integer", "minimum": 0, "maximum": 255, "description": "Property. "}, "POWER_SUPPLY_HEALTH_SAFETY_TIMER_EXPIRE": {"type": "integer", "minimum": 0, "maximum": 255, "description": "Property. "}, "POWER_SUPPLY_TECHNOLOGY_UNKNOWN": {"type": "integer", "minimum": 0, "maximum": 255, "description": "Property. Power supply technology (chemistry) constants "}, "POWER_SUPPLY_TECHNOLOGY_NIMH": {"type": "integer", "minimum": 0, "maximum": 255, "description": "Property. "}, "POWER_SUPPLY_TECHNOLOGY_LION": {"type": "integer", "minimum": 0, "maximum": 255, "description": "Property. "}, "POWER_SUPPLY_TECHNOLOGY_LIPO": {"type": "integer", "minimum": 0, "maximum": 255, "description": "Property. "}, "POWER_SUPPLY_TECHNOLOGY_LIFE": {"type": "integer", "minimum": 0, "maximum": 255, "description": "Property. "}, "POWER_SUPPLY_TECHNOLOGY_NICD": {"type": "integer", "minimum": 0, "maximum": 255, "description": "Property. "}, "POWER_SUPPLY_TECHNOLOGY_LIMN": {"type": "integer", "minimum": 0, "maximum": 255, "description": "Property. "}, "": {"type": "boolean", "description": "Property.  True if the battery is present "}, "voltage": {"type": "number", "description": "Property.  Voltage in Volts (Mandatory) "}, "temperature": {"type": "number", "description": "Property.  Temperature in Degrees Celsius (If unmeasured NaN) "}, "current": {"type": "number", "description": "Property.  Negative when discharging (A)  (If unmeasured NaN) "}, "charge": {"type": "number", "description": "Property.  Current charge in Ah  (If unmeasured NaN) "}, "capacity": {"type": "number", "description": "Property.  Capacity in Ah (last full capacity)  (If unmeasured NaN) "}, "design_capacity": {"type": "number", "description": "Property.  Capacity in Ah (design capacity)  (If unmeasured NaN) "}, "percentage": {"type": "number", "description": "Property.  Charge percentage on 0 to 1 range  (If unmeasured NaN) "}, "cell_voltage": {"type": "array", "description": "Property.  An array of individual cell voltages for each cell in the pack ", "items": {"type": "number"}}, "cell_temperature": {"type": "array", "description": "Property.  If individual voltages unknown but number of cells known set each to NaN  An array of individual cell temperatures for each cell in the pack ", "items": {"type": "number"}}, "location": {"type": "string", "description": "Property.  If individual temperatures unknown but number of cells known set each to NaN  The location into which the battery is inserted. (slot number or plug) "}, "serial_number": {"type": "string", "description": "Property.  The best approximation of the battery serial number "}}